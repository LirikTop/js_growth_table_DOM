{"mappings":"AAAA;AAEA,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,YAAY,UAAU,aAAa,CAAC;AAC1C,MAAM,YAAY,UAAU,aAAa,CAAC;AAC1C,MAAM,YAAY,UAAU,aAAa,CAAC;AAC1C,MAAM,YAAY,UAAU,aAAa,CAAC;AAC1C,MAAM,QAAQ,UAAU,aAAa,CAAC;AAEtC,IAAI,WAAW,MAAM,IAAI,CAAC,MAAM;AAChC,IAAI,WAAW,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM;AAEzC,MAAM,iBAAiB;IACrB,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC;IAEvC,MAAM,WAAW,CAAC;AACpB;AACA,MAAM,iBAAiB;IACrB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;QACjC,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC;QAEhD,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;IAC5B;AACF;AACA,MAAM,iBAAiB;IACrB,MAAM,SAAS,CAAC;AAClB;AACA,MAAM,iBAAiB;IACrB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAC5B,MAAM,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;AAE7B;AACA,MAAM,gBAAgB;IACpB,IAAI,aAAa,GACf,UAAU,QAAQ,GAAG;SAErB,UAAU,QAAQ,GAAG;IAGvB,IAAI,aAAa,IACf,UAAU,QAAQ,GAAG;SAErB,UAAU,QAAQ,GAAG;AAEzB;AACA,MAAM,gBAAgB;IACpB,IAAI,aAAa,GACf,UAAU,QAAQ,GAAG;SAErB,UAAU,QAAQ,GAAG;IAGvB,IAAI,aAAa,IACf,UAAU,QAAQ,GAAG;SAErB,UAAU,QAAQ,GAAG;AAEzB;AAEA,qCAAqC;AACrC,UAAU,gBAAgB,CAAC,SAAS,CAAC;IACnC,MAAM,SAAS,MAAM,MAAM,CAAC,OAAO,CAAC;IAEpC,IAAI,QAAQ;QACV,IAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,eAC5B;QAGF,IAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,kBAC5B;QAGF,IAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,eAC5B;QAGF,IAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,kBAC5B;QAGF,WAAW,MAAM,IAAI,CAAC,MAAM;QAC5B,WAAW,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM;QAErC;QACA;IACF;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst appendRow = container.querySelector('.append-row');\nconst appendCol = container.querySelector('.append-column');\nconst removeRow = container.querySelector('.remove-row');\nconst removeCol = container.querySelector('.remove-column');\nconst table = container.querySelector('table');\n\nlet countRow = table.rows.length;\nlet countCol = table.rows[0].cells.length;\n\nconst appendRowClick = () => {\n  const newRow = table.rows[0].cloneNode(true);\n\n  table.appendChild(newRow);\n};\nconst appendColClick = () => {\n  for (let i = 0; i < countRow; i++) {\n    const newCol = table.rows[0].cells[0].cloneNode(true);\n\n    table.rows[i].appendChild(newCol);\n  }\n};\nconst removeRowClick = () => {\n  table.deleteRow(0);\n};\nconst removeColClick = () => {\n  for (let i = 0; i < countRow; i++) {\n    table.rows[i].deleteCell(0);\n  }\n};\nconst checkCountRow = () => {\n  if (countRow === 2) {\n    removeRow.disabled = true;\n  } else {\n    removeRow.disabled = false;\n  }\n\n  if (countRow === 10) {\n    appendRow.disabled = true;\n  } else {\n    appendRow.disabled = false;\n  }\n};\nconst checkCountCol = () => {\n  if (countCol === 2) {\n    removeCol.disabled = true;\n  } else {\n    removeCol.disabled = false;\n  }\n\n  if (countCol === 10) {\n    appendCol.disabled = true;\n  } else {\n    appendCol.disabled = false;\n  }\n};\n\n// eslint-disable-next-line no-shadow\ncontainer.addEventListener('click', (event) => {\n  const button = event.target.closest('.button');\n\n  if (button) {\n    if (button.classList.contains('append-row')) {\n      appendRowClick();\n    }\n\n    if (button.classList.contains('append-column')) {\n      appendColClick();\n    }\n\n    if (button.classList.contains('remove-row')) {\n      removeRowClick();\n    }\n\n    if (button.classList.contains('remove-column')) {\n      removeColClick();\n    }\n\n    countRow = table.rows.length;\n    countCol = table.rows[0].cells.length;\n\n    checkCountRow();\n    checkCountCol();\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}